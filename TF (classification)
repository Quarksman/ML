import matplotlib.pyplot as plt
import pandas as pd
import numpy as np

df=pd.read_csv('/Users/kritsana/Downloads/Datasets/Learn/cancer_classification.csv')
print(df.head(2).to_string())
print(df.info())
print(df.isnull().sum())
print(df.duplicated().sum())
print(df.nunique())
print(df.describe().to_string())
print(df.columns)
print(df.shape)

#sns.countplot(x='benign_0__mal_1',data=df)

#df.corr()['benign_0__mal_1'][:-1].sort_values().plot(kind='bar') #exclude 0,1 cancer

#plt.figure(figsize=(12,12))
#sns.heatmap(df.corr())


X=df.drop('benign_0__mal_1',axis=1).values
y=df['benign_0__mal_1'].values
from sklearn.model_selection import  train_test_split
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.3, random_state=101)
from sklearn.preprocessing import MinMaxScaler
scaler=MinMaxScaler()
scaler.fit(X_train)
X_train=scaler.transform(X_train)
X_test=scaler.transform(X_test)
from keras.models import Sequential
from keras.layers import Dense,Dropout
print(X_train.shape) #30 features
model=Sequential()
model.add(Dense(30,activation='relu'))
model.add(Dropout(0.5)) #prevent overfit
model.add(Dense(15,activation='relu'))
model.add(Dropout(0.5)) #prevent overfit
model.add(Dense(1,activation='sigmoid')) # for binary data
model.compile(optimizer='adam',loss='binary_crossentropy')
from keras.callbacks import EarlyStopping
from sklearn.linear_model import LogisticRegression
early_stop=EarlyStopping(monitor='val_loss',mode='min',verbose=1,patience=25)
cancer=model.fit(x=X_train,y=y_train,validation_data=(X_test,y_test),epochs=600,callbacks=[early_stop]) #prevent overfit
model_loss=pd.DataFrame(model.history.history)
model_loss.plot()
plt.show()
predictions = (model.predict(X_test) > 0.5).astype("int32") #new replace predict_classes

from sklearn.metrics import classification_report,confusion_matrix
print(classification_report(y_test,predictions))
print(confusion_matrix(y_test,predictions))
